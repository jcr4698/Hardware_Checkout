{"ast":null,"code":"import _classCallCheck from\"/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import'./Projects.css';/* Library Indices */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IDX=0;var PROJ_NAME=1;var PROJ_ID=2;var DESC=3;var USERS=4;var HW_SELECT=5;var HW_LIST=6;/* HW Indices */var HW_VAL=0;var HW_CAP=1;/* Components */ // Project: Displays the structure of the list of projects\nvar Projects=/*#__PURE__*/function(_React$Component){_inherits(Projects,_React$Component);var _super=_createSuper(Projects);function Projects(){_classCallCheck(this,Projects);return _super.apply(this,arguments);}_createClass(Projects,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(LogoutUser,{onLogoutClick:function onLogoutClick(){return _this.handleLogout();}}),/*#__PURE__*/_jsxs(\"div\",{className:\"project_wrap\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"project_title\",\"data-testid\":\"page-title\",children:[this.props.curr_user,\"'s Projects\"]}),/*#__PURE__*/_jsx(ProjectData,{curr_user:this.props.curr_user,curr_id:this.props.curr_id}),/*#__PURE__*/_jsx(\"div\",{className:\"empty_space\"})]})]});}/* Handlers */ // handleLogin: Determine whether a valid account is entered\n},{key:\"handleLogout\",value:function handleLogout(){this.props.handleLogoutStatus();}}]);return Projects;}(React.Component);// Place data into a stored list\nvar ProjectData=/*#__PURE__*/function(_React$Component2){_inherits(ProjectData,_React$Component2);var _super2=_createSuper(ProjectData);// constructor: Store data into the state\nfunction ProjectData(props){var _this2;_classCallCheck(this,ProjectData);/* Current state of the library */_this2=_super2.call(this,props);_this2.state={/* User Information */curr_user:_this2.props.curr_user,curr_id:_this2.props.curr_id,curr_hw1:[0,0],curr_hw2:[0,0],project_list:[],proj_desc:\"\"};return _this2;}// componentDidMount: Initialize data from server into library\n_createClass(ProjectData,[{key:\"componentDidMount\",value:function componentDidMount(){this.handleRefresh();}// render: Update page with the data stored\n},{key:\"render\",value:function render(){var _this3=this;/* Create html list */var new_project_list=[];/* Get data from library */var project_list=this.state.project_list.slice();/* Push data as formatted project to html list */for(var i=0;i<project_list.length;i++){/* Get next project (data) */var project_data=project_list[i];/* Project in HTML format for library */new_project_list.push(this.renderProject(project_data[IDX],project_data[PROJ_NAME],project_data[USERS],project_data[HW_LIST]));}/* output the fully formatted project library */return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RefreshUser,{onRefreshClick:function onRefreshClick(){return _this3.handleRefresh();}}),this.renderHWSets(this.state.curr_hw1,this.state.curr_hw2),/*#__PURE__*/_jsx(\"div\",{className:\"empty_space\"}),new_project_list,/*#__PURE__*/_jsx(\"div\",{className:\"empty_space\"}),this.renderNewProject(),/*#__PURE__*/_jsx(\"div\",{className:\"empty_space\"}),this.renderJoinProject(),/*#__PURE__*/_jsx(\"div\",{className:\"empty_space\"})]});}/* functions */ // renderHWSets: Format the hardware sets available and the capacity\n},{key:\"renderHWSets\",value:function renderHWSets(hw1,hw2){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"hardware_sets\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"hw_column\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hw_description\",\"data-testid\":\"hw1_test\",children:\"HWSet1:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"hw_description\",children:[hw1[HW_VAL],\"/\",hw1[HW_CAP]]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"hardware_sets\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"hw_column\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hw_description\",\"data-testid\":\"hw2_test\",children:\"HWSet2:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"hw_description\",children:[hw2[HW_VAL],\"/\",hw2[HW_CAP]]})]})})]});}// renderProject: Create a single formatted project with given data\n},{key:\"renderProject\",value:function renderProject(i,proj,usr,hw){var _this4=this;return/*#__PURE__*/_jsx(Project,{// \"key\" is recommended by console (don't use it much in project tho)\nidx:i,Name:proj,Users:usr,HW:hw,onMoreInfoClick:function onMoreInfoClick(){return _this4.handleMoreInfo(i);},onCheckInClick:function onCheckInClick(){return _this4.handleCheckIn(i);},onCheckOutClick:function onCheckOutClick(){return _this4.handleCheckOut(i);},onHWSelection:function onHWSelection(){return _this4.handleHWSelection(i);},onProjectLeave:function onProjectLeave(){return _this4.handleProjectLeave(i);}},i.toString());}// renderNewProject: Create template that prompts user to make new project\n},{key:\"renderNewProject\",value:function renderNewProject(){var _this5=this;return/*#__PURE__*/_jsx(ProjectAdder,{onNewProjectClick:function onNewProjectClick(){return _this5.handleNewProject();}});}// renderJoinProject: Create template that prompts user for project id to join\n},{key:\"renderJoinProject\",value:function renderJoinProject(){var _this6=this;return/*#__PURE__*/_jsx(ProjectJoiner,{onProjectJoinClick:function onProjectJoinClick(){return _this6.handleProjectJoin();}});}/* Handlers */ // handleRefresh: Update the projects in the project library\n},{key:\"handleRefresh\",value:function handleRefresh(){var _this7=this;/* list format to be stored */var proj_list=[];/* Obtain data fetched from route into library */fetch(\"/project_init\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user_id:[this.props.curr_id]})}).then(function(response){return response.json();}).then(function(respJson){/* Get projects */var data=JSON.parse(JSON.stringify(respJson));var projects=data[\"Projects\"];for(var proj in projects){// API Should return all projects associated with user_id\nproj_list.push(projects[proj]);// Then, make sure to format the data for the frontend\n}/* Get hw sets */var hw_set_1=data[\"HW1\"];var hw_set_2=data[\"HW2\"];/* Set state of frontend */_this7.setState({project_list:proj_list,curr_hw1:hw_set_1,curr_hw2:hw_set_2});});}// handleHWSelection: Alert the description of the project chosen\n},{key:\"handleMoreInfo\",value:function handleMoreInfo(i){var _this8=this;var project_list=this.state.project_list.slice();/* Obtain data fetched from route into library */fetch(\"/get_project_description\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({proj_desc:\"\",proj_id:project_list[i][PROJ_ID]})}).then(function(response){return response.json();}).then(function(respJson){var description=JSON.parse(JSON.stringify(respJson));alert(\"PROJECT DESCRIPTION: \"+description[\"project_description\"]);_this8.setState({proj_desc:description[\"project_description\"]});});}// handleHWSelection: Update hw selection value when selection has changed\n},{key:\"handleHWSelection\",value:function handleHWSelection(i){/* Get and modify the hw selection index */var project_list=this.state.project_list.slice();var curr_hw_selection=parseInt(document.getElementById(\"hw_set:\"+project_list[i][PROJ_NAME]).value);project_list[i][HW_SELECT]=curr_hw_selection;/* Set the hw selection index to state */this.setState({project_list:project_list});}// handleCheckIn: Add and display new values to interface\n},{key:\"handleCheckIn\",value:function handleCheckIn(i){var _this9=this;/* Get current list and hw selection index */var project_list=this.state.project_list.slice();/* Get input value (chk-in value) and make sure it's not empty */var check_in_val=document.getElementById(\"check_in:\"+project_list[i][PROJ_NAME]).value;if(check_in_val!==\"\"&&!isNaN(check_in_val)){/* Get current value and capacity of hw selection */var proj_id=project_list[i][PROJ_ID];var proj_hw_idx=project_list[i][HW_SELECT];/* Obtain data fetched from route into library */fetch(\"/check_in\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({proj_id:proj_id,hw_set:proj_hw_idx,check_val:parseInt(check_in_val),user_id:this.state.curr_id})}).then(function(response){return response.json();}).then(function(respJson){/* Get hw data */var data=JSON.parse(JSON.stringify(respJson));/* Get hw sets */var hw_set_1=data[\"HW1\"];var hw_set_2=data[\"HW2\"];/* Set state of frontend */_this9.setState({curr_hw1:hw_set_1,curr_hw2:hw_set_2});document.getElementById(\"check_in:\"+project_list[i][PROJ_NAME]).value=\"\";});}}// handleCheckOut: Subtract and display new values to interface\n},{key:\"handleCheckOut\",value:function handleCheckOut(i){var _this10=this;/* Access current list and hw selection index */var project_list=this.state.project_list.slice();/* Make sure field is not empty */var check_out_val=document.getElementById(\"check_out:\"+project_list[i][PROJ_NAME]).value;if(check_out_val!==\"\"&&!isNaN(check_out_val)){/* Get current value and capacity of hw selection */var proj_id=project_list[i][PROJ_ID];var proj_hw_idx=project_list[i][HW_SELECT];/* Obtain data fetched from route into library */fetch(\"/check_out\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({proj_id:proj_id,hw_set:proj_hw_idx,check_val:parseInt(check_out_val),user_id:this.state.curr_id})}).then(function(response){return response.json();}).then(function(respJson){/* Get hw data */var data=JSON.parse(JSON.stringify(respJson));/* Get hw sets */var hw_set_1=data[\"HW1\"];var hw_set_2=data[\"HW2\"];/* Set state of frontend */_this10.setState({curr_hw1:hw_set_1,curr_hw2:hw_set_2});document.getElementById(\"check_out:\"+project_list[i][PROJ_NAME]).value=\"\";});}}// handleNewProject: Add new HWSet to The data of the library\n},{key:\"handleNewProject\",value:function handleNewProject(){var _this11=this;/* Get the new project info and make sure they are non-empty strings */var project_name=document.getElementById(\"new_project_name\").value;var project_id=document.getElementById(\"new_project_id\").value;if(typeof project_name==='string'&&typeof project_id==='string'){if(project_name.trim()!==''&&project_id.trim()!==''){/* Get state push the new data into it */var project_list=this.state.project_list.slice();var user_list=[];user_list.push(this.state.curr_id);/* Add additional users */var list_input=document.getElementById(\"new_project_users\").value;if(typeof list_input=='string'&&list_input.trim()!==''){var users_arr=list_input.split(\",\").map(String);for(var i=0;i<users_arr.length;i++){var auth_user=users_arr[i].trim();if(auth_user!==''){user_list.push(auth_user);}}}var proj_desc=document.getElementById(\"new_project_description\").value;/* Attempt adding project to json */fetch(\"/project_add\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user_id:this.props.curr_id,proj_id:project_id,proj_data:[project_list.length,project_name,project_id,user_list,1],proj_desc:proj_desc})}).then(function(response){return response.json();}).then(function(respJson){var data=JSON.parse(JSON.stringify(respJson));/* Update Project List */if(data[\"Status\"]){project_list.push([project_list.length,project_name,project_id,user_list,1,[[100,100],[100,100]]]);/* Set list with additional project data to state */_this11.setState({project_list:project_list});/* Clear input text fields */document.getElementById(\"new_project_name\").value=\"\";document.getElementById(\"new_project_id\").value=\"\";document.getElementById(\"new_project_description\").value=\"\";document.getElementById(\"new_project_users\").value=\"\";}else{alert(\"Project ID already exists in database.\");}});}}}// handleProjectJoin: Search for project in database and join if possible\n},{key:\"handleProjectJoin\",value:function handleProjectJoin(){var _this12=this;/* Get the new project info and make sure they are non-empty strings */var project_id=document.getElementById(\"existing_project_id\").value;if(typeof project_id==='string'&&project_id.trim()!==''){var project_list=this.state.project_list.slice();/* Attempt adding project to json */fetch(\"/project_join\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user_id:this.props.curr_id,proj_id:project_id})}).then(function(response){return response.json();}).then(function(respJson){/* Open json response */var data=JSON.parse(JSON.stringify(respJson));/* Update Project List */if(data[\"Status\"]){/* get project data */var proj_data=data[\"Project\"];var project_name=proj_data[0];var user_list=proj_data[2];project_list.push([project_list.length,project_name,project_id,\"\",user_list,1]);/* Set list with additional project data to state */_this12.setState({project_list:project_list});/* Clear input text fields */document.getElementById(\"new_project_name\").value=\"\";document.getElementById(\"new_project_id\").value=\"\";}else{alert(\"Project ID doesn't exists in database, or already part of it.\");}});}}},{key:\"handleProjectLeave\",value:function handleProjectLeave(i){var _this13=this;/* list format to be stored */var proj_list=[];/* Get current list and hw selection index */var project_list=this.state.project_list.slice();/* Get the new project info and make sure they are non-empty strings */var project_id=project_list[i][PROJ_ID];/* Attempt adding project to json */fetch(\"/project_leave\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user_id:this.props.curr_id,proj_id:project_id})}).then(function(response){return response.json();}).then(function(respJson){/* Open json response */var data=JSON.parse(JSON.stringify(respJson));/* Update Project List */if(data[\"Status\"]){/* Get projects */var projects=data[\"Projects\"];for(var proj in projects){// API Should return all projects associated with user_id\nproj_list.push(projects[proj]);// Then, make sure to format the data for the frontend\n}/* Get hw sets */var hw_set_1=data[\"HW1\"];var hw_set_2=data[\"HW2\"];/* Set state of frontend */_this13.setState({project_list:proj_list,curr_hw1:hw_set_1,curr_hw2:hw_set_2});}else{alert(\"Project ID doesn't exists in database.\");}});}}]);return ProjectData;}(React.Component);/* HTML */ // LogoutUser: HTML that prompts user to log-out\nfunction LogoutUser(props){return/*#__PURE__*/_jsx(\"button\",{className:\"logout_btn\",type:\"button\",onClick:props.onLogoutClick,children:\"logout\"});}// RefreshUser: HTML that prompts user to refresh\nfunction RefreshUser(props){return/*#__PURE__*/_jsx(\"button\",{className:\"refresh_btn\",type:\"button\",onClick:props.onRefreshClick,children:\"refresh\"});}// Project: HTML that formats a single Project\nfunction Project(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"project\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"project_column\",children:/*#__PURE__*/_jsx(\"p\",{className:\"project_name\",children:props.Name})}),/*#__PURE__*/_jsx(\"div\",{className:\"project_column\",children:/*#__PURE__*/_jsx(\"div\",{className:\"registered_user_list\",children:Registered_Users(props.Users)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"project_column\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"hw_description\",children:\"Select HWSet:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"hw_select\",id:\"hw_set:\"+props.Name,name:\"hwset\",onChange:props.onHWSelection,children:[/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"HWSet 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"HWSet 2\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"project_column\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"hw_input\",id:\"check_in:\"+props.Name,type:\"text\",placeholder:\"Enter Value\"}),/*#__PURE__*/_jsx(\"button\",{className:\"check_btn\",type:\"button\",onClick:props.onCheckInClick,children:\"Check In\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"project_column\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"hw_input\",id:\"check_out:\"+props.Name,type:\"text\",placeholder:\"Enter Value\"}),/*#__PURE__*/_jsx(\"button\",{className:\"check_btn\",type:\"button\",onClick:props.onCheckOutClick,children:\"Check Out\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"project_column\",children:/*#__PURE__*/_jsx(\"button\",{className:\"join_btn\",type:\"button\",onClick:props.onMoreInfoClick,children:\"More Info\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"project_column\",children:/*#__PURE__*/_jsx(\"button\",{className:\"join_btn\",id:\"leave:\"+props.Name,type:\"button\",onClick:props.onProjectLeave,children:\"Leave\"})})]});}// Registered_Users: Creates user list to HTML (Project helper function)\nfunction Registered_Users(users){/* Make HTML format for users */var curr_user_list=[];/* Push data as formatted project to html list */for(var i=0;i<users.length;i++){curr_user_list.push(/*#__PURE__*/_jsx(\"p\",{className:\"registered_user\",children:users[i]},i));}/* Return the HTML format */return curr_user_list;}// ProjectAdder: HTML that gives the user the option to add a project to the library\nfunction ProjectAdder(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"new_project\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"new_project_column\",children:/*#__PURE__*/_jsx(\"input\",{className:\"new_project_input\",id:\"new_project_name\",type:\"text\",placeholder:\"Enter Project Name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"new_project_column\",children:/*#__PURE__*/_jsx(\"input\",{className:\"new_project_input\",id:\"new_project_id\",type:\"text\",placeholder:\"Enter Project ID\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"new_project_column\",children:/*#__PURE__*/_jsx(\"button\",{className:\"add_project_btn\",type:\"button\",onClick:props.onNewProjectClick,children:\"Add Project\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"new_project_description\",children:/*#__PURE__*/_jsx(\"input\",{className:\"project_description\",\"data-testid\":\"new_proj_desc\",id:\"new_project_users\",type:\"text\",placeholder:\"Enter Authorized Users (Separated by a comma)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"new_project_description\",children:/*#__PURE__*/_jsx(\"input\",{className:\"project_description\",id:\"new_project_description\",type:\"text\",placeholder:\"Enter Project Description\"})})]});}function ProjectJoiner(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"project\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"join_project_column\",children:/*#__PURE__*/_jsx(\"p\",{className:\"add_project_title\",\"data-testid\":\"join_project_test\",children:\"Join Existing Project:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"join_project_column\",children:/*#__PURE__*/_jsx(\"input\",{className:\"new_project_input\",id:\"existing_project_id\",type:\"text\",placeholder:\"Project ID\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"join_project_column\",children:/*#__PURE__*/_jsx(\"button\",{className:\"join_project_btn\",type:\"button\",onClick:props.onProjectJoinClick,children:\"Join\"})})]});}export{Projects};","map":{"version":3,"names":["React","IDX","PROJ_NAME","PROJ_ID","DESC","USERS","HW_SELECT","HW_LIST","HW_VAL","HW_CAP","Projects","handleLogout","props","curr_user","curr_id","handleLogoutStatus","Component","ProjectData","state","curr_hw1","curr_hw2","project_list","proj_desc","handleRefresh","new_project_list","slice","i","length","project_data","push","renderProject","renderHWSets","renderNewProject","renderJoinProject","hw1","hw2","proj","usr","hw","handleMoreInfo","handleCheckIn","handleCheckOut","handleHWSelection","handleProjectLeave","toString","handleNewProject","handleProjectJoin","proj_list","fetch","method","headers","body","JSON","stringify","user_id","then","response","json","respJson","data","parse","projects","hw_set_1","hw_set_2","setState","proj_id","description","alert","curr_hw_selection","parseInt","document","getElementById","value","check_in_val","isNaN","proj_hw_idx","hw_set","check_val","check_out_val","project_name","project_id","trim","user_list","list_input","users_arr","split","map","String","auth_user","proj_data","LogoutUser","onLogoutClick","RefreshUser","onRefreshClick","Project","Name","Registered_Users","Users","onHWSelection","onCheckInClick","onCheckOutClick","onMoreInfoClick","onProjectLeave","users","curr_user_list","ProjectAdder","onNewProjectClick","ProjectJoiner","onProjectJoinClick"],"sources":["/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/src/Projects.js"],"sourcesContent":["import React from 'react';\nimport './Projects.css';\n\n/* Library Indices */\n\nconst IDX = 0;\nconst PROJ_NAME = 1;\nconst PROJ_ID = 2;\nconst DESC = 3;\nconst USERS = 4;\nconst HW_SELECT = 5;\nconst HW_LIST = 6;\n\n/* HW Indices */\n\nconst HW_VAL = 0;\nconst HW_CAP = 1;\n\n/* Components */\n\n// Project: Displays the structure of the list of projects\nclass Projects extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<LogoutUser\n\t\t\t\t\tonLogoutClick={() => this.handleLogout()}\n\t\t\t\t/>\n\t\t\t\t<div className=\"project_wrap\">\n\t\t\t\t\t<p className=\"project_title\"\n\t\t\t\t\t\tdata-testid=\"page-title\">\n\t\t\t\t\t\t{this.props.curr_user}'s Projects\n\t\t\t\t\t</p>\n\t\t\t\t\t<ProjectData\n\t\t\t\t\t\tcurr_user={this.props.curr_user}\n\t\t\t\t\t\tcurr_id={this.props.curr_id}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n\t/* Handlers */\n\n\t// handleLogin: Determine whether a valid account is entered\n    handleLogout() {\n\t\tthis.props.handleLogoutStatus();\n\t}\n\n}\n\n// Place data into a stored list\nclass ProjectData extends React.Component {\n\n\t// constructor: Store data into the state\n\tconstructor(props) {\n\n\t\t/* Current state of the library */\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t/* User Information */\n\t\t\tcurr_user: this.props.curr_user,\n\t\t\tcurr_id: this.props.curr_id,\n\t\t\tcurr_hw1: [0, 0],\n\t\t\tcurr_hw2: [0, 0],\n\t\t\tproject_list: [],\n\t\t\tproj_desc: \"\"\n\t\t};\n\n\t}\n\n\t// componentDidMount: Initialize data from server into library\n\tcomponentDidMount() {\n\t\tthis.handleRefresh();\n\t}\n\n\t// render: Update page with the data stored\n\trender() {\n\t\t/* Create html list */\n\t\tconst new_project_list = [];\n\n\t\t/* Get data from library */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Push data as formatted project to html list */\n\t\tfor(let i = 0; i < project_list.length; i++) {\n\t\t\t/* Get next project (data) */\n\t\t\tconst project_data = project_list[i];\n\n\t\t\t/* Project in HTML format for library */\n\t\t\tnew_project_list.push(\n\t\t\t\tthis.renderProject(project_data[IDX], project_data[PROJ_NAME], project_data[USERS], project_data[HW_LIST])\n\t\t\t);\n\t\t}\n\n\t\t/* output the fully formatted project library */\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RefreshUser\n\t\t\t\t\tonRefreshClick={() => this.handleRefresh()}\n\t\t\t\t/>\n\t\t\t\t{this.renderHWSets(this.state.curr_hw1, this.state.curr_hw2)}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{new_project_list}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{this.renderNewProject()}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{this.renderJoinProject()}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/* functions */\n\n\t// renderHWSets: Format the hardware sets available and the capacity\n\trenderHWSets(hw1, hw2) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"hardware_sets\">\n\t\t\t\t\t<div className=\"hw_column\">\n\t\t\t\t\t\t<p className=\"hw_description\"\n\t\t\t\t\t\t\tdata-testid=\"hw1_test\">\n\t\t\t\t\t\t\tHWSet1:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\t\t\t{hw1[HW_VAL]}/{hw1[HW_CAP]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hardware_sets\">\n\t\t\t\t\t<div className=\"hw_column\">\n\t\t\t\t\t\t<p className=\"hw_description\"\n\t\t\t\t\t\t\tdata-testid=\"hw2_test\">\n\t\t\t\t\t\t\tHWSet2:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\t\t\t{hw2[HW_VAL]}/{hw2[HW_CAP]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// renderProject: Create a single formatted project with given data\n\trenderProject(i, proj, usr, hw) {\n\t\treturn (\n\t\t\t<Project\n\t\t\t\tkey={i.toString()}  // \"key\" is recommended by console (don't use it much in project tho)\n\t\t\t\tidx={i}\n\t\t\t\tName={proj}\n\t\t\t\tUsers={usr}\n\t\t\t\tHW={hw}\n\t\t\t\tonMoreInfoClick={() => this.handleMoreInfo(i)}\n\t\t\t\tonCheckInClick={() => this.handleCheckIn(i)}\n\t\t\t\tonCheckOutClick={() => this.handleCheckOut(i)}\n\t\t\t\tonHWSelection={() => this.handleHWSelection(i)}\n\t\t\t\tonProjectLeave={() => this.handleProjectLeave(i)} />\n\t\t)\n\t}\n\n\t// renderNewProject: Create template that prompts user to make new project\n\trenderNewProject() {\n\t\treturn (\n\t\t\t<ProjectAdder onNewProjectClick={() => this.handleNewProject()} />\n\t\t)\n\t}\n\n\t// renderJoinProject: Create template that prompts user for project id to join\n\trenderJoinProject() {\n\t\treturn (\n\t\t\t<ProjectJoiner onProjectJoinClick={() => this.handleProjectJoin()} />\n\t\t)\n\t}\n\n\t/* Handlers */\n\n\t// handleRefresh: Update the projects in the project library\n\thandleRefresh() {\n\t\t/* list format to be stored */\n\t\tconst proj_list = [];\n\n\t\t/* Obtain data fetched from route into library */\n\t\tfetch(\"/project_init\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuser_id: [this.props.curr_id]\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(respJson => {\n\n\t\t\t/* Get projects */\n\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\t\t\tconst projects = data[\"Projects\"];\n\t\t\tfor(let proj in projects) {\t// API Should return all projects associated with user_id\n\t\t\t\tproj_list.push(projects[proj]);\t// Then, make sure to format the data for the frontend\n\t\t\t}\n\n\t\t\t/* Get hw sets */\n\t\t\tconst hw_set_1 = data[\"HW1\"];\n\t\t\tconst hw_set_2 = data[\"HW2\"];\n\n\t\t\t/* Set state of frontend */\n\t\t\tthis.setState({\n\t\t\t\tproject_list: proj_list,\n\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t});\n\t\t});\n\t}\n\n\t// handleHWSelection: Alert the description of the project chosen\n\thandleMoreInfo(i) {\n\t\tconst project_list = this.state.project_list.slice()\n\t\t/* Obtain data fetched from route into library */\n\t\tfetch(\"/get_project_description\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tproj_desc: \"\",\n\t\t\t\tproj_id: project_list[i][PROJ_ID]\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(respJson => {\n\t\t\tconst description = JSON.parse(JSON.stringify(respJson));\n\t\t\talert(\"PROJECT DESCRIPTION: \" + description[\"project_description\"]);\n\t\t\tthis.setState({\n\t\t\t\tproj_desc: description[\"project_description\"]\n\t\t\t})\n\t\t});\n\t}\n\n\t// handleHWSelection: Update hw selection value when selection has changed\n\thandleHWSelection(i) {\n\t\t/* Get and modify the hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\tvar curr_hw_selection = parseInt(document.getElementById(\"hw_set:\" + project_list[i][PROJ_NAME]).value);\n\t\tproject_list[i][HW_SELECT] = curr_hw_selection;\n\n\t\t/* Set the hw selection index to state */\n\t\tthis.setState({\n\t\t\tproject_list: project_list\n\t\t})\n\t}\n\n\t// handleCheckIn: Add and display new values to interface\n\thandleCheckIn(i) {\n\t\t/* Get current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Get input value (chk-in value) and make sure it's not empty */\n\t\tconst check_in_val = document.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value;\n\t\tif(check_in_val !== \"\" && !isNaN(check_in_val)) {\n\n\t\t\t/* Get current value and capacity of hw selection */\n\t\t\tconst proj_id = project_list[i][PROJ_ID];\n\t\t\tconst proj_hw_idx = project_list[i][HW_SELECT];\n\n\t\t\t/* Obtain data fetched from route into library */\n\t\t\tfetch(\"/check_in\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tproj_id: proj_id,\n\t\t\t\t\thw_set: proj_hw_idx,\n\t\t\t\t\tcheck_val: parseInt(check_in_val),\n\t\t\t\t\tuser_id: this.state.curr_id,\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(respJson => {\n\n\t\t\t\t/* Get hw data */\n\t\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\n\t\t\t\t/* Get hw sets */\n\t\t\t\tconst hw_set_1 = data[\"HW1\"];\n\t\t\t\tconst hw_set_2 = data[\"HW2\"];\n\n\t\t\t\t/* Set state of frontend */\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t\t});\n\n\t\t\t\tdocument.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value = \"\";\n\n\t\t\t});\n\t\t}\n\t}\n\n\t// handleCheckOut: Subtract and display new values to interface\n\thandleCheckOut(i) {\n\t\t/* Access current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Make sure field is not empty */\n\t\tconst check_out_val = document.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value;\n\t\tif(check_out_val !== \"\" && !isNaN(check_out_val)) {\n\n\t\t\t/* Get current value and capacity of hw selection */\n\t\t\tconst proj_id = project_list[i][PROJ_ID];\n\t\t\tconst proj_hw_idx = project_list[i][HW_SELECT];\n\n\t\t\t/* Obtain data fetched from route into library */\n\t\t\tfetch(\"/check_out\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tproj_id: proj_id,\n\t\t\t\t\thw_set: proj_hw_idx,\n\t\t\t\t\tcheck_val: parseInt(check_out_val),\n\t\t\t\t\tuser_id: this.state.curr_id\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(respJson => {\n\n\t\t\t\t/* Get hw data */\n\t\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\n\t\t\t\t/* Get hw sets */\n\t\t\t\tconst hw_set_1 = data[\"HW1\"];\n\t\t\t\tconst hw_set_2 = data[\"HW2\"];\n\n\t\t\t\t/* Set state of frontend */\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t\t});\n\n\t\t\t\tdocument.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value = \"\";\n\n\t\t\t});\n\t\t}\n\t}\n\n\t// handleNewProject: Add new HWSet to The data of the library\n\thandleNewProject() {\n\t\t/* Get the new project info and make sure they are non-empty strings */\n\t\tconst project_name = document.getElementById(\"new_project_name\").value;\n\t\tconst project_id = document.getElementById(\"new_project_id\").value;\n\t\tif(typeof project_name === 'string' && typeof project_id === 'string') {\n\t\t\tif(project_name.trim() !== '' && project_id.trim() !== '') {\n\n\t\t\t\t/* Get state push the new data into it */\n\t\t\t\tconst project_list = this.state.project_list.slice();\n\t\t\t\tconst user_list = [];\n\t\t\t\tuser_list.push(this.state.curr_id);\n\n\t\t\t\t/* Add additional users */\n\t\t\t\tconst list_input = document.getElementById(\"new_project_users\").value;\n\t\t\t\tif(typeof list_input == 'string' && list_input.trim() !== '') {\n\t\t\t\t\tconst users_arr = list_input.split(\",\").map(String);\n\t\t\t\t\tfor(let i = 0; i < users_arr.length; i++) {\n\t\t\t\t\t\tconst auth_user = users_arr[i].trim();\n\t\t\t\t\t\tif(auth_user !== '') {\n\t\t\t\t\t\t\tuser_list.push(auth_user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst proj_desc = document.getElementById(\"new_project_description\").value;\n\n\t\t\t\t/* Attempt adding project to json */\n\t\t\t\tfetch(\"/project_add\", {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tuser_id: this.props.curr_id,\n\t\t\t\t\t\tproj_id: project_id,\n\t\t\t\t\t\tproj_data: [\n\t\t\t\t\t\t\t\t\t\tproject_list.length,\n\t\t\t\t\t\t\t\t\t\tproject_name,\n\t\t\t\t\t\t\t\t\t\tproject_id,\n\t\t\t\t\t\t\t\t\t\tuser_list,\n\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\tproj_desc: proj_desc\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(respJson => {\n\t\t\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\t\t\t\n\t\t\t\t\t/* Update Project List */\n\t\t\t\t\tif(data[\"Status\"]) {\n\t\t\t\t\t\tproject_list.push([project_list.length, project_name, project_id, user_list, 1, [[100, 100], [100, 100]]]);\n\n\t\t\t\t\t\t/* Set list with additional project data to state */\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tproject_list: project_list\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t/* Clear input text fields */\n\t\t\t\t\t\tdocument.getElementById(\"new_project_name\").value = \"\";\n\t\t\t\t\t\tdocument.getElementById(\"new_project_id\").value = \"\";\n\t\t\t\t\t\tdocument.getElementById(\"new_project_description\").value = \"\";\n\t\t\t\t\t\tdocument.getElementById(\"new_project_users\").value = \"\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\talert(\"Project ID already exists in database.\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// handleProjectJoin: Search for project in database and join if possible\n\thandleProjectJoin() {\n\t\t/* Get the new project info and make sure they are non-empty strings */\n\t\tconst project_id = document.getElementById(\"existing_project_id\").value;\n\n\t\tif(typeof project_id === 'string' && project_id.trim() !== '') {\n\n\t\t\tconst project_list = this.state.project_list.slice();\n\n\t\t\t/* Attempt adding project to json */\n\t\t\tfetch(\"/project_join\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tuser_id: this.props.curr_id,\n\t\t\t\t\tproj_id: project_id\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(respJson => {\n\n\t\t\t\t/* Open json response */\n\t\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\n\t\t\t\t/* Update Project List */\n\t\t\t\tif(data[\"Status\"]) {\n\n\t\t\t\t\t/* get project data */\n\t\t\t\t\tconst proj_data = data[\"Project\"]\n\t\t\t\t\tconst project_name = proj_data[0]\n\t\t\t\t\tconst user_list = proj_data[2]\n\t\t\t\t\tproject_list.push([\n\t\t\t\t\t\t\t\t\t\t\tproject_list.length,\n\t\t\t\t\t\t\t\t\t\t\tproject_name,\n\t\t\t\t\t\t\t\t\t\t\tproject_id,\n\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\tuser_list,\n\t\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t/* Set list with additional project data to state */\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tproject_list: project_list\n\t\t\t\t\t})\n\n\t\t\t\t\t/* Clear input text fields */\n\t\t\t\t\tdocument.getElementById(\"new_project_name\").value = \"\";\n\t\t\t\t\tdocument.getElementById(\"new_project_id\").value = \"\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert(\"Project ID doesn't exists in database, or already part of it.\")\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\thandleProjectLeave(i) {\n\t\t/* list format to be stored */\n\t\tconst proj_list = [];\n\n\t\t/* Get current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Get the new project info and make sure they are non-empty strings */\n\t\tconst project_id = project_list[i][PROJ_ID];\n\n\t\t/* Attempt adding project to json */\n\t\t\tfetch(\"/project_leave\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tuser_id: this.props.curr_id,\n\t\t\t\t\tproj_id: project_id\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(respJson => {\n\n\t\t\t\t/* Open json response */\n\t\t\t\tconst data = JSON.parse(JSON.stringify(respJson));\n\n\t\t\t\t/* Update Project List */\n\t\t\t\tif(data[\"Status\"]) {\n\n\t\t\t\t\t/* Get projects */\n\t\t\t\t\tconst projects = data[\"Projects\"];\n\t\t\t\t\tfor(let proj in projects) {\t// API Should return all projects associated with user_id\n\t\t\t\t\t\tproj_list.push(projects[proj]);\t// Then, make sure to format the data for the frontend\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Get hw sets */\n\t\t\t\t\tconst hw_set_1 = data[\"HW1\"];\n\t\t\t\t\tconst hw_set_2 = data[\"HW2\"];\n\n\t\t\t\t\t/* Set state of frontend */\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tproject_list: proj_list,\n\t\t\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert(\"Project ID doesn't exists in database.\")\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n\n/* HTML */\n\n// LogoutUser: HTML that prompts user to log-out\nfunction LogoutUser(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"logout_btn\"\n\t\t\ttype=\"button\"\n\t\t\tonClick={props.onLogoutClick} >\n\t\t\tlogout\n\t\t</button>\n\t)\n}\n\n// RefreshUser: HTML that prompts user to refresh\nfunction RefreshUser(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"refresh_btn\"\n\t\t\ttype=\"button\"\n\t\t\tonClick={props.onRefreshClick} >\n\t\t\trefresh\n\t\t</button>\n\t)\n}\n\n// Project: HTML that formats a single Project\nfunction Project(props) {\n\treturn (\n\t\t<div className=\"project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<p className=\"project_name\">\n\t\t\t\t\t{props.Name}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<div className=\"registered_user_list\">\n\t\t\t\t\t{Registered_Users(props.Users)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Select HW */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\tSelect HWSet:\n\t\t\t\t</p>\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"hw_select\"\n\t\t\t\t\tid={\"hw_set:\" + props.Name}\n\t\t\t\t\tname=\"hwset\"\n\t\t\t\t\tonChange={props.onHWSelection} >\n\t\t\t\t\t<option value=\"1\">\n\t\t\t\t\t\tHWSet 1\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"2\">\n\t\t\t\t\t\tHWSet 2\n\t\t\t\t\t</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/* Check In */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<input className=\"hw_input\"\n\t\t\t\t\tid={\"check_in:\" + props.Name}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Value\" />\n\t\t\t\t<button className=\"check_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onCheckInClick} >\n\t\t\t\t\tCheck In\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Check Out */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<input className=\"hw_input\"\n\t\t\t\t\tid={\"check_out:\" + props.Name}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Value\" />\n\t\t\t\t<button className=\"check_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onCheckOutClick} >\n\t\t\t\t\tCheck Out\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Project Description */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<button className=\"join_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onMoreInfoClick} >\n\t\t\t\t\tMore Info\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Join or Leave */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<button className=\"join_btn\"\n\t\t\t\t\tid={\"leave:\" + props.Name}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onProjectLeave}>\n\t\t\t\t\tLeave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n// Registered_Users: Creates user list to HTML (Project helper function)\nfunction Registered_Users(users) {\n\t/* Make HTML format for users */\n\tconst curr_user_list = []\n\n\t/* Push data as formatted project to html list */\n\tfor(let i = 0; i < users.length; i++) {\n\t\tcurr_user_list.push(\n\t\t\t<p className=\"registered_user\" key={i}>\n\t\t\t\t{users[i]}\n\t\t\t</p>\n\t\t)\n\t}\n\n\t/* Return the HTML format */\n\treturn curr_user_list;\n}\n\n// ProjectAdder: HTML that gives the user the option to add a project to the library\nfunction ProjectAdder(props) {\n\treturn (\n\t\t<div className=\"new_project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"new_project_name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project Name\" />\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"new_project_id\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project ID\" />\n\t\t\t</div>\n\t\t\t{/* Add Project */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<button className=\"add_project_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onNewProjectClick} >\n\t\t\t\t\tAdd Project\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Users */}\n\t\t\t<div className=\"new_project_description\">\n\t\t\t\t<input className=\"project_description\"\n\t\t\t\t\tdata-testid=\"new_proj_desc\"\n\t\t\t\t\tid=\"new_project_users\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Authorized Users (Separated by a comma)\" />\n\t\t\t</div>\n\t\t\t{/* Description */}\n\t\t\t<div className=\"new_project_description\">\n\t\t\t\t<input className=\"project_description\"\n\t\t\t\t\tid=\"new_project_description\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project Description\" />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction ProjectJoiner(props) {\n\treturn (\n\t\t<div className=\"project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<p className=\"add_project_title\"\n\t\t\t\t\tdata-testid=\"join_project_test\">\n\t\t\t\t\tJoin Existing Project:\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"existing_project_id\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Project ID\" />\n\t\t\t</div>\n\t\t\t{/* Join or Leave */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"join_project_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onProjectJoinClick} >\n\t\t\t\t\tJoin\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport {Projects};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}