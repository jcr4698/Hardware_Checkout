{"ast":null,"code":"var _jsxFileName = \"/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/src/Projects.js\";\nimport React from 'react';\nimport './Projects.css';\n\n/* Library Indices */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IDX = 0;\nconst PROJ_NAME = 1;\nconst PROJ_ID = 2;\nconst DESC = 3;\nconst USERS = 4;\nconst HW_SELECT = 5;\nconst HW_LIST = 6;\n\n/* HW Indices */\n\nconst HW_VAL = 0;\nconst HW_CAP = 1;\n\n/* Components */\n\n// Project: Displays the structure of the list of projects\nclass Projects extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LogoutUser, {\n        onLogoutClick: () => this.handleLogout()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"project_title\",\n          \"data-testid\": \"page-title\",\n          children: [this.props.curr_user, \"'s Projects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ProjectData, {\n          curr_user: this.props.curr_user,\n          curr_id: this.props.curr_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty_space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this);\n  }\n\n  /* Handlers */\n\n  // handleLogin: Determine whether a valid account is entered\n  handleLogout() {\n    this.props.handleLogoutStatus();\n  }\n}\n\n// Place data into a stored list\nclass ProjectData extends React.Component {\n  // constructor: Store data into the state\n  constructor(props) {\n    /* Current state of the library */\n    super(props);\n    this.state = {\n      /* User Information */\n      curr_user: this.props.curr_user,\n      curr_id: this.props.curr_id,\n      curr_hw1: [180, 180],\n      curr_hw2: [180, 180],\n      project_list: [[0, \"Project 1\", \"proj0\", \"Example Project 1 for demo\", [\"you\", \"jcr4698\"], 1, [[100, 100], [100, 100]]], [1, \"Project 2\", \"proj1\", \"Example Project 2 for demo\", [\"you\", \"abc123\"], 1, [[100, 100], [100, 100]]]],\n      proj_desc: \"\"\n    };\n  }\n\n  // componentDidMount: Initialize data from server into library\n  componentDidMount() {\n    this.handleRefresh();\n  }\n\n  // render: Update page with the data stored\n  render() {\n    /* Create html list */\n    const new_project_list = [];\n\n    /* Get data from library */\n    const project_list = this.state.project_list.slice();\n\n    /* Push data as formatted project to html list */\n    for (let i = 0; i < project_list.length; i++) {\n      /* Get next project (data) */\n      const project_data = project_list[i];\n\n      /* Project in HTML format for library */\n      new_project_list.push(this.renderProject(project_data[IDX], project_data[PROJ_NAME], project_data[USERS], project_data[HW_LIST]));\n    }\n\n    /* output the fully formatted project library */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RefreshUser, {\n        onRefreshClick: () => this.handleRefresh()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), this.renderHWSets(this.state.curr_hw1, this.state.curr_hw2), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty_space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), new_project_list, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty_space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), this.renderNewProject(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty_space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), this.renderJoinProject(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty_space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this);\n  }\n\n  /* functions */\n\n  // renderHWSets: Format the hardware sets available and the capacity\n  renderHWSets(hw1, hw2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hardware_sets\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hw_column\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hw_description\",\n            \"data-testid\": \"hw1_test\",\n            children: \"HWSet1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hw_description\",\n            children: [hw1[HW_VAL], \"/\", hw1[HW_CAP]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hardware_sets\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hw_column\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hw_description\",\n            \"data-testid\": \"hw2_test\",\n            children: \"HWSet2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hw_description\",\n            children: [hw1[HW_VAL], \"/\", hw1[HW_CAP]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this);\n  }\n\n  // renderProject: Create a single formatted project with given data\n  renderProject(i, proj, usr, hw) {\n    return /*#__PURE__*/_jsxDEV(Project, {\n      // \"key\" is recommended by console (don't use it much in project tho)\n      idx: i,\n      Name: proj,\n      Users: usr,\n      HW: hw,\n      onMoreInfoClick: () => this.handleMoreInfo(i),\n      onCheckInClick: () => this.handleCheckIn(i),\n      onCheckOutClick: () => this.handleCheckOut(i),\n      onHWSelection: () => this.handleHWSelection(i),\n      onProjectLeave: () => this.handleProjectLeave(i)\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this);\n  }\n\n  // renderNewProject: Create template that prompts user to make new project\n  renderNewProject() {\n    return /*#__PURE__*/_jsxDEV(ProjectAdder, {\n      onNewProjectClick: () => this.handleNewProject()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this);\n  }\n\n  // renderJoinProject: Create template that prompts user for project id to join\n  renderJoinProject() {\n    return /*#__PURE__*/_jsxDEV(ProjectJoiner, {\n      onProjectJoinClick: () => this.handleProjectJoin()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this);\n  }\n\n  /* Handlers */\n\n  // handleRefresh: Update the projects in the project library\n  handleRefresh() {\n    /* list format to be stored */\n    // const proj_list = [[0, \"Project 1\", \"proj0\", \"Example Project 1 for demo\", [\"you\", \"jcr4698\"], 1, [[100, 100], [100, 100]]],\n    // \t\t\t\t   [1, \"Project 2\", \"proj1\", \"Example Project 2 for demo\", [\"you\", \"abc123\"], 1, [[100, 100], [100, 100]]]];\n\n    /* Get hw sets */\n    // const hw_set_1 = 180;\n    // const hw_set_2 = 180;\n\n    /* Set state of frontend */\n    // this.setState({\n    // \t// project_list: proj_list,\n    // \tcurr_hw1: hw_set_1,\n    // \tcurr_hw2: hw_set_2\n    // });\n  }\n\n  // handleHWSelection: Alert the description of the project chosen\n  handleMoreInfo(i) {\n    /* Obtain data fetched from route into library */\n    alert(\"PROJECT DESCRIPTION: example description of current project.\");\n    this.setState({\n      proj_desc: \"example description of current project.\"\n    });\n  }\n\n  // handleHWSelection: Update hw selection value when selection has changed\n  handleHWSelection(i) {\n    /* Get and modify the hw selection index */\n    const project_list = this.state.project_list.slice();\n    var curr_hw_selection = parseInt(document.getElementById(\"hw_set:\" + project_list[i][PROJ_NAME]).value);\n    project_list[i][HW_SELECT] = curr_hw_selection;\n\n    /* Set the hw selection index to state */\n    this.setState({\n      project_list: project_list\n    });\n  }\n\n  // handleCheckIn: Add and display new values to interface\n  handleCheckIn(i) {\n    /* Get current list and hw selection index */\n    const project_list = this.state.project_list.slice();\n\n    /* Get input value (chk-in value) and make sure it's not empty */\n    const check_in_val = document.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value;\n    if (check_in_val !== \"\" && !isNaN(check_in_val)) {\n      /* Get current value and capacity of hw selection */\n      const proj_id = project_list[i][PROJ_ID];\n      const proj_hw_idx = project_list[i][HW_SELECT];\n      console.log(proj_id);\n      console.log(proj_hw_idx);\n\n      /* Get hw sets */\n\n      const hw_set_1 = this.state.curr_hw1;\n      const hw_set_2 = this.state.curr_hw2;\n\n      /* Set state of frontend */\n      this.setState({\n        curr_hw1: hw_set_1,\n        curr_hw2: hw_set_2\n      });\n      document.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value = \"\";\n    }\n  }\n\n  // handleCheckOut: Subtract and display new values to interface\n  handleCheckOut(i) {\n    /* Access current list and hw selection index */\n    const project_list = this.state.project_list.slice();\n\n    /* Make sure field is not empty */\n    const check_out_val = document.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value;\n    if (check_out_val !== \"\" && !isNaN(check_out_val)) {\n      /* Get hw sets */\n      const hw_set_1 = this.state.curr_hw1;\n      const hw_set_2 = this.state.curr_hw2;\n\n      /* Set state of frontend */\n      this.setState({\n        curr_hw1: hw_set_1,\n        curr_hw2: hw_set_2\n      });\n      document.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value = \"\";\n    }\n  }\n\n  // handleNewProject: Add new HWSet to The data of the library\n  handleNewProject() {\n    /* Get the new project info and make sure they are non-empty strings */\n    const project_name = document.getElementById(\"new_project_name\").value;\n    const project_id = document.getElementById(\"new_project_id\").value;\n    if (typeof project_name === 'string' && typeof project_id === 'string') {\n      if (project_name.trim() !== '' && project_id.trim() !== '') {\n        /* Get state push the new data into it */\n        const project_list = this.state.project_list.slice();\n        const user_list = [];\n        user_list.push(this.state.curr_id);\n\n        /* Add additional users */\n        const list_input = document.getElementById(\"new_project_users\").value;\n        if (typeof list_input == 'string' && list_input.trim() !== '') {\n          const users_arr = list_input.split(\",\").map(String);\n          for (let i = 0; i < users_arr.length; i++) {\n            const auth_user = users_arr[i].trim();\n            if (auth_user !== '') {\n              user_list.push(auth_user);\n            }\n          }\n        }\n        project_list.push([project_list.length, project_name, project_id, user_list, 1, [[100, 100], [100, 100]]]);\n\n        /* Set list with additional project data to state */\n        this.setState({\n          project_list: project_list\n        });\n\n        /* Clear input text fields */\n        document.getElementById(\"new_project_name\").value = \"\";\n        document.getElementById(\"new_project_id\").value = \"\";\n        document.getElementById(\"new_project_description\").value = \"\";\n        document.getElementById(\"new_project_users\").value = \"\";\n      }\n    }\n  }\n\n  // handleProjectJoin: Search for project in database and join if possible\n  handleProjectJoin() {\n    /* Get the new project info and make sure they are non-empty strings */\n    const project_id = document.getElementById(\"existing_project_id\").value;\n    if (typeof project_id === 'string' && project_id.trim() !== '') {\n      const project_list = this.state.project_list.slice();\n      project_list.push([project_list.length, \"External Project\", \"example_1\", \"\", \"you\", 1]);\n\n      /* Set list with additional project data to state */\n      this.setState({\n        project_list: project_list\n      });\n\n      /* Clear input text fields */\n      document.getElementById(\"new_project_name\").value = \"\";\n      document.getElementById(\"new_project_id\").value = \"\";\n    }\n  }\n  handleProjectLeave(i) {\n    /* list format to be stored */\n    // const proj_list = [];\n\n    /* Get current list and hw selection index */\n    const project_list = this.state.project_list.slice();\n    project_list.splice(i, 1);\n    console.log(project_list);\n\n    /* Set state of frontend */\n    this.setState({\n      project_list: project_list\n      // curr_hw1: hw_set_1,\n      // curr_hw2: hw_set_2\n    });\n  }\n}\n\n/* HTML */\n\n// LogoutUser: HTML that prompts user to log-out\nfunction LogoutUser(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"logout_btn\",\n    type: \"button\",\n    onClick: props.onLogoutClick,\n    children: \"logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 3\n  }, this);\n}\n\n// RefreshUser: HTML that prompts user to refresh\n_c = LogoutUser;\nfunction RefreshUser(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"refresh_btn\",\n    type: \"button\",\n    onClick: props.onRefreshClick,\n    children: \"refresh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 3\n  }, this);\n}\n\n// Project: HTML that formats a single Project\n_c2 = RefreshUser;\nfunction Project(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project_name\",\n        children: props.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registered_user_list\",\n        children: Registered_Users(props.Users)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hw_description\",\n        children: \"Select HWSet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"hw_select\",\n        id: \"hw_set:\" + props.Name,\n        name: \"hwset\",\n        onChange: props.onHWSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"HWSet 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"HWSet 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"hw_input\",\n        id: \"check_in:\" + props.Name,\n        type: \"text\",\n        placeholder: \"Enter Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check_btn\",\n        type: \"button\",\n        onClick: props.onCheckInClick,\n        children: \"Check In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"hw_input\",\n        id: \"check_out:\" + props.Name,\n        type: \"text\",\n        placeholder: \"Enter Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check_btn\",\n        type: \"button\",\n        onClick: props.onCheckOutClick,\n        children: \"Check Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join_btn\",\n        type: \"button\",\n        onClick: props.onMoreInfoClick,\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join_btn\",\n        id: \"leave:\" + props.Name,\n        type: \"button\",\n        onClick: props.onProjectLeave,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 3\n  }, this);\n}\n\n// Registered_Users: Creates user list to HTML (Project helper function)\n_c3 = Project;\nfunction Registered_Users(users) {\n  /* Make HTML format for users */\n  const curr_user_list = [];\n\n  /* Push data as formatted project to html list */\n  for (let i = 0; i < users.length; i++) {\n    curr_user_list.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"registered_user\",\n      children: users[i]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 4\n    }, this));\n  }\n\n  /* Return the HTML format */\n  return curr_user_list;\n}\n\n// ProjectAdder: HTML that gives the user the option to add a project to the library\n_c4 = Registered_Users;\nfunction ProjectAdder(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new_project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new_project_input\",\n        id: \"new_project_name\",\n        type: \"text\",\n        placeholder: \"Enter Project Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new_project_input\",\n        id: \"new_project_id\",\n        type: \"text\",\n        placeholder: \"Enter Project ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add_project_btn\",\n        type: \"button\",\n        onClick: props.onNewProjectClick,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_project_description\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"project_description\",\n        \"data-testid\": \"new_proj_desc\",\n        id: \"new_project_users\",\n        type: \"text\",\n        placeholder: \"Enter Authorized Users (Separated by a comma)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_project_description\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"project_description\",\n        id: \"new_project_description\",\n        type: \"text\",\n        placeholder: \"Enter Project Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 3\n  }, this);\n}\n_c5 = ProjectAdder;\nfunction ProjectJoiner(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"add_project_title\",\n        \"data-testid\": \"join_project_test\",\n        children: \"Join Existing Project:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new_project_input\",\n        id: \"existing_project_id\",\n        type: \"text\",\n        placeholder: \"Project ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join_project_column\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join_project_btn\",\n        type: \"button\",\n        onClick: props.onProjectJoinClick,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 3\n  }, this);\n}\n_c6 = ProjectJoiner;\nexport { Projects };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LogoutUser\");\n$RefreshReg$(_c2, \"RefreshUser\");\n$RefreshReg$(_c3, \"Project\");\n$RefreshReg$(_c4, \"Registered_Users\");\n$RefreshReg$(_c5, \"ProjectAdder\");\n$RefreshReg$(_c6, \"ProjectJoiner\");","map":{"version":3,"names":["React","IDX","PROJ_NAME","PROJ_ID","DESC","USERS","HW_SELECT","HW_LIST","HW_VAL","HW_CAP","Projects","Component","render","handleLogout","props","curr_user","curr_id","handleLogoutStatus","ProjectData","constructor","state","curr_hw1","curr_hw2","project_list","proj_desc","componentDidMount","handleRefresh","new_project_list","slice","i","length","project_data","push","renderProject","renderHWSets","renderNewProject","renderJoinProject","hw1","hw2","proj","usr","hw","handleMoreInfo","handleCheckIn","handleCheckOut","handleHWSelection","handleProjectLeave","toString","handleNewProject","handleProjectJoin","alert","setState","curr_hw_selection","parseInt","document","getElementById","value","check_in_val","isNaN","proj_id","proj_hw_idx","console","log","hw_set_1","hw_set_2","check_out_val","project_name","project_id","trim","user_list","list_input","users_arr","split","map","String","auth_user","splice","LogoutUser","onLogoutClick","RefreshUser","onRefreshClick","Project","Name","Registered_Users","Users","onHWSelection","onCheckInClick","onCheckOutClick","onMoreInfoClick","onProjectLeave","users","curr_user_list","ProjectAdder","onNewProjectClick","ProjectJoiner","onProjectJoinClick"],"sources":["/home/programmedbean/Files/Projects/Hardware_Checkout/frontend/src/Projects.js"],"sourcesContent":["import React from 'react';\nimport './Projects.css';\n\n/* Library Indices */\n\nconst IDX = 0;\nconst PROJ_NAME = 1;\nconst PROJ_ID = 2;\nconst DESC = 3;\nconst USERS = 4;\nconst HW_SELECT = 5;\nconst HW_LIST = 6;\n\n/* HW Indices */\n\nconst HW_VAL = 0;\nconst HW_CAP = 1;\n\n/* Components */\n\n// Project: Displays the structure of the list of projects\nclass Projects extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<LogoutUser\n\t\t\t\t\tonLogoutClick={() => this.handleLogout()}\n\t\t\t\t/>\n\t\t\t\t<div className=\"project_wrap\">\n\t\t\t\t\t<p className=\"project_title\"\n\t\t\t\t\t\tdata-testid=\"page-title\">\n\t\t\t\t\t\t{this.props.curr_user}'s Projects\n\t\t\t\t\t</p>\n\t\t\t\t\t<ProjectData\n\t\t\t\t\t\tcurr_user={this.props.curr_user}\n\t\t\t\t\t\tcurr_id={this.props.curr_id}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n\t/* Handlers */\n\n\t// handleLogin: Determine whether a valid account is entered\n    handleLogout() {\n\t\tthis.props.handleLogoutStatus();\n\t}\n\n}\n\n// Place data into a stored list\nclass ProjectData extends React.Component {\n\n\t// constructor: Store data into the state\n\tconstructor(props) {\n\n\t\t/* Current state of the library */\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t/* User Information */\n\t\t\tcurr_user: this.props.curr_user,\n\t\t\tcurr_id: this.props.curr_id,\n\t\t\tcurr_hw1: [180, 180],\n\t\t\tcurr_hw2: [180, 180],\n\t\t\tproject_list: [[0, \"Project 1\", \"proj0\", \"Example Project 1 for demo\", [\"you\", \"jcr4698\"], 1, [[100, 100], [100, 100]]],\n\t\t\t\t\t\t   [1, \"Project 2\", \"proj1\", \"Example Project 2 for demo\", [\"you\", \"abc123\"], 1, [[100, 100], [100, 100]]]],\n\t\t\tproj_desc: \"\"\n\t\t};\n\n\t}\n\n\t// componentDidMount: Initialize data from server into library\n\tcomponentDidMount() {\n\t\tthis.handleRefresh();\n\t}\n\n\t// render: Update page with the data stored\n\trender() {\n\t\t/* Create html list */\n\t\tconst new_project_list = [];\n\n\t\t/* Get data from library */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Push data as formatted project to html list */\n\t\tfor(let i = 0; i < project_list.length; i++) {\n\t\t\t/* Get next project (data) */\n\t\t\tconst project_data = project_list[i];\n\n\t\t\t/* Project in HTML format for library */\n\t\t\tnew_project_list.push(\n\t\t\t\tthis.renderProject(project_data[IDX], project_data[PROJ_NAME], project_data[USERS], project_data[HW_LIST])\n\t\t\t);\n\t\t}\n\n\t\t/* output the fully formatted project library */\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RefreshUser\n\t\t\t\t\tonRefreshClick={() => this.handleRefresh()}\n\t\t\t\t/>\n\t\t\t\t{this.renderHWSets(this.state.curr_hw1, this.state.curr_hw2)}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{new_project_list}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{this.renderNewProject()}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t\t{this.renderJoinProject()}\n\t\t\t\t<div className=\"empty_space\" />\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/* functions */\n\n\t// renderHWSets: Format the hardware sets available and the capacity\n\trenderHWSets(hw1, hw2) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"hardware_sets\">\n\t\t\t\t\t<div className=\"hw_column\">\n\t\t\t\t\t\t<p className=\"hw_description\"\n\t\t\t\t\t\t\tdata-testid=\"hw1_test\">\n\t\t\t\t\t\t\tHWSet1:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\t\t\t{hw1[HW_VAL]}/{hw1[HW_CAP]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hardware_sets\">\n\t\t\t\t\t<div className=\"hw_column\">\n\t\t\t\t\t\t<p className=\"hw_description\"\n\t\t\t\t\t\t\tdata-testid=\"hw2_test\">\n\t\t\t\t\t\t\tHWSet2:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\t\t\t{hw1[HW_VAL]}/{hw1[HW_CAP]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// renderProject: Create a single formatted project with given data\n\trenderProject(i, proj, usr, hw) {\n\t\treturn (\n\t\t\t<Project\n\t\t\t\tkey={i.toString()}  // \"key\" is recommended by console (don't use it much in project tho)\n\t\t\t\tidx={i}\n\t\t\t\tName={proj}\n\t\t\t\tUsers={usr}\n\t\t\t\tHW={hw}\n\t\t\t\tonMoreInfoClick={() => this.handleMoreInfo(i)}\n\t\t\t\tonCheckInClick={() => this.handleCheckIn(i)}\n\t\t\t\tonCheckOutClick={() => this.handleCheckOut(i)}\n\t\t\t\tonHWSelection={() => this.handleHWSelection(i)}\n\t\t\t\tonProjectLeave={() => this.handleProjectLeave(i)} />\n\t\t)\n\t}\n\n\t// renderNewProject: Create template that prompts user to make new project\n\trenderNewProject() {\n\t\treturn (\n\t\t\t<ProjectAdder onNewProjectClick={() => this.handleNewProject()} />\n\t\t)\n\t}\n\n\t// renderJoinProject: Create template that prompts user for project id to join\n\trenderJoinProject() {\n\t\treturn (\n\t\t\t<ProjectJoiner onProjectJoinClick={() => this.handleProjectJoin()} />\n\t\t)\n\t}\n\n\t/* Handlers */\n\n\t// handleRefresh: Update the projects in the project library\n\thandleRefresh() {\n\t\t/* list format to be stored */\n\t\t// const proj_list = [[0, \"Project 1\", \"proj0\", \"Example Project 1 for demo\", [\"you\", \"jcr4698\"], 1, [[100, 100], [100, 100]]],\n\t\t// \t\t\t\t   [1, \"Project 2\", \"proj1\", \"Example Project 2 for demo\", [\"you\", \"abc123\"], 1, [[100, 100], [100, 100]]]];\n\n\t\t/* Get hw sets */\n\t\t// const hw_set_1 = 180;\n\t\t// const hw_set_2 = 180;\n\n\t\t/* Set state of frontend */\n\t\t// this.setState({\n\t\t// \t// project_list: proj_list,\n\t\t// \tcurr_hw1: hw_set_1,\n\t\t// \tcurr_hw2: hw_set_2\n\t\t// });\n\t}\n\n\t// handleHWSelection: Alert the description of the project chosen\n\thandleMoreInfo(i) {\n\t\t/* Obtain data fetched from route into library */\n\t\talert(\"PROJECT DESCRIPTION: example description of current project.\");\n\t\tthis.setState({\n\t\t\tproj_desc: \"example description of current project.\"\n\t\t})\n\t}\n\n\t// handleHWSelection: Update hw selection value when selection has changed\n\thandleHWSelection(i) {\n\t\t/* Get and modify the hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\tvar curr_hw_selection = parseInt(document.getElementById(\"hw_set:\" + project_list[i][PROJ_NAME]).value);\n\t\tproject_list[i][HW_SELECT] = curr_hw_selection;\n\n\t\t/* Set the hw selection index to state */\n\t\tthis.setState({\n\t\t\tproject_list: project_list\n\t\t})\n\t}\n\n\t// handleCheckIn: Add and display new values to interface\n\thandleCheckIn(i) {\n\t\t/* Get current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Get input value (chk-in value) and make sure it's not empty */\n\t\tconst check_in_val = document.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value;\n\t\tif(check_in_val !== \"\" && !isNaN(check_in_val)) {\n\n\t\t\t/* Get current value and capacity of hw selection */\n\t\t\tconst proj_id = project_list[i][PROJ_ID];\n\t\t\tconst proj_hw_idx = project_list[i][HW_SELECT];\n\n\t\t\tconsole.log(proj_id);\n\t\t\tconsole.log(proj_hw_idx);\n\n\t\t\t/* Get hw sets */\n\n\t\t\tconst hw_set_1 = this.state.curr_hw1;\n\t\t\tconst hw_set_2 = this.state.curr_hw2;\n\n\t\t\t/* Set state of frontend */\n\t\t\tthis.setState({\n\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t});\n\n\t\t\tdocument.getElementById(\"check_in:\" + project_list[i][PROJ_NAME]).value = \"\";\n\n\t\t}\n\t}\n\n\t// handleCheckOut: Subtract and display new values to interface\n\thandleCheckOut(i) {\n\t\t/* Access current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\n\t\t/* Make sure field is not empty */\n\t\tconst check_out_val = document.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value;\n\t\tif(check_out_val !== \"\" && !isNaN(check_out_val)) {\n\n\t\t\t/* Get hw sets */\n\t\t\tconst hw_set_1 = this.state.curr_hw1;\n\t\t\tconst hw_set_2 = this.state.curr_hw2;\n\n\t\t\t/* Set state of frontend */\n\t\t\tthis.setState({\n\t\t\t\tcurr_hw1: hw_set_1,\n\t\t\t\tcurr_hw2: hw_set_2\n\t\t\t});\n\n\t\t\tdocument.getElementById(\"check_out:\" + project_list[i][PROJ_NAME]).value = \"\";\n\n\t\t}\n\t}\n\n\t// handleNewProject: Add new HWSet to The data of the library\n\thandleNewProject() {\n\t\t/* Get the new project info and make sure they are non-empty strings */\n\t\tconst project_name = document.getElementById(\"new_project_name\").value;\n\t\tconst project_id = document.getElementById(\"new_project_id\").value;\n\t\tif(typeof project_name === 'string' && typeof project_id === 'string') {\n\t\t\tif(project_name.trim() !== '' && project_id.trim() !== '') {\n\n\t\t\t\t/* Get state push the new data into it */\n\t\t\t\tconst project_list = this.state.project_list.slice();\n\t\t\t\tconst user_list = [];\n\t\t\t\tuser_list.push(this.state.curr_id);\n\n\t\t\t\t/* Add additional users */\n\t\t\t\tconst list_input = document.getElementById(\"new_project_users\").value;\n\t\t\t\tif(typeof list_input == 'string' && list_input.trim() !== '') {\n\t\t\t\t\tconst users_arr = list_input.split(\",\").map(String);\n\t\t\t\t\tfor(let i = 0; i < users_arr.length; i++) {\n\t\t\t\t\t\tconst auth_user = users_arr[i].trim();\n\t\t\t\t\t\tif(auth_user !== '') {\n\t\t\t\t\t\t\tuser_list.push(auth_user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tproject_list.push([project_list.length, project_name, project_id, user_list, 1, [[100, 100], [100, 100]]]);\n\n\t\t\t\t/* Set list with additional project data to state */\n\t\t\t\tthis.setState({\n\t\t\t\t\tproject_list: project_list\n\t\t\t\t})\n\n\t\t\t\t/* Clear input text fields */\n\t\t\t\tdocument.getElementById(\"new_project_name\").value = \"\";\n\t\t\t\tdocument.getElementById(\"new_project_id\").value = \"\";\n\t\t\t\tdocument.getElementById(\"new_project_description\").value = \"\";\n\t\t\t\tdocument.getElementById(\"new_project_users\").value = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// handleProjectJoin: Search for project in database and join if possible\n\thandleProjectJoin() {\n\t\t/* Get the new project info and make sure they are non-empty strings */\n\t\tconst project_id = document.getElementById(\"existing_project_id\").value;\n\n\t\tif(typeof project_id === 'string' && project_id.trim() !== '') {\n\n\t\t\tconst project_list = this.state.project_list.slice();\n\n\t\t\tproject_list.push([\n\t\t\t\t\t\t\t\t\tproject_list.length,\n\t\t\t\t\t\t\t\t\t\"External Project\",\n\t\t\t\t\t\t\t\t\t\"example_1\",\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"you\",\n\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t]);\n\n\t\t\t/* Set list with additional project data to state */\n\t\t\tthis.setState({\n\t\t\t\tproject_list: project_list\n\t\t\t})\n\n\t\t\t/* Clear input text fields */\n\t\t\tdocument.getElementById(\"new_project_name\").value = \"\";\n\t\t\tdocument.getElementById(\"new_project_id\").value = \"\";\n\t\t}\n\n\t}\n\n\thandleProjectLeave(i) {\n\t\t/* list format to be stored */\n\t\t// const proj_list = [];\n\n\t\t/* Get current list and hw selection index */\n\t\tconst project_list = this.state.project_list.slice();\n\t\tproject_list.splice(i, 1);\n\n\t\tconsole.log(project_list);\n\n\t\t/* Set state of frontend */\n\t\tthis.setState({\n\t\t\tproject_list: project_list,\n\t\t\t// curr_hw1: hw_set_1,\n\t\t\t// curr_hw2: hw_set_2\n\t\t});\n\t}\n\n}\n\n/* HTML */\n\n// LogoutUser: HTML that prompts user to log-out\nfunction LogoutUser(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"logout_btn\"\n\t\t\ttype=\"button\"\n\t\t\tonClick={props.onLogoutClick} >\n\t\t\tlogout\n\t\t</button>\n\t)\n}\n\n// RefreshUser: HTML that prompts user to refresh\nfunction RefreshUser(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"refresh_btn\"\n\t\t\ttype=\"button\"\n\t\t\tonClick={props.onRefreshClick} >\n\t\t\trefresh\n\t\t</button>\n\t)\n}\n\n// Project: HTML that formats a single Project\nfunction Project(props) {\n\treturn (\n\t\t<div className=\"project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<p className=\"project_name\">\n\t\t\t\t\t{props.Name}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<div className=\"registered_user_list\">\n\t\t\t\t\t{Registered_Users(props.Users)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Select HW */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<p className=\"hw_description\">\n\t\t\t\t\tSelect HWSet:\n\t\t\t\t</p>\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"hw_select\"\n\t\t\t\t\tid={\"hw_set:\" + props.Name}\n\t\t\t\t\tname=\"hwset\"\n\t\t\t\t\tonChange={props.onHWSelection} >\n\t\t\t\t\t<option value=\"1\">\n\t\t\t\t\t\tHWSet 1\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"2\">\n\t\t\t\t\t\tHWSet 2\n\t\t\t\t\t</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/* Check In */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<input className=\"hw_input\"\n\t\t\t\t\tid={\"check_in:\" + props.Name}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Value\" />\n\t\t\t\t<button className=\"check_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onCheckInClick} >\n\t\t\t\t\tCheck In\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Check Out */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<input className=\"hw_input\"\n\t\t\t\t\tid={\"check_out:\" + props.Name}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Value\" />\n\t\t\t\t<button className=\"check_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onCheckOutClick} >\n\t\t\t\t\tCheck Out\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Project Description */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<button className=\"join_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onMoreInfoClick} >\n\t\t\t\t\tMore Info\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Join or Leave */}\n\t\t\t<div className=\"project_column\">\n\t\t\t\t<button className=\"join_btn\"\n\t\t\t\t\tid={\"leave:\" + props.Name}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onProjectLeave}>\n\t\t\t\t\tLeave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n// Registered_Users: Creates user list to HTML (Project helper function)\nfunction Registered_Users(users) {\n\t/* Make HTML format for users */\n\tconst curr_user_list = []\n\n\t/* Push data as formatted project to html list */\n\tfor(let i = 0; i < users.length; i++) {\n\t\tcurr_user_list.push(\n\t\t\t<p className=\"registered_user\" key={i}>\n\t\t\t\t{users[i]}\n\t\t\t</p>\n\t\t)\n\t}\n\n\t/* Return the HTML format */\n\treturn curr_user_list;\n}\n\n// ProjectAdder: HTML that gives the user the option to add a project to the library\nfunction ProjectAdder(props) {\n\treturn (\n\t\t<div className=\"new_project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"new_project_name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project Name\" />\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"new_project_id\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project ID\" />\n\t\t\t</div>\n\t\t\t{/* Add Project */}\n\t\t\t<div className=\"new_project_column\">\n\t\t\t\t<button className=\"add_project_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onNewProjectClick} >\n\t\t\t\t\tAdd Project\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{/* Users */}\n\t\t\t<div className=\"new_project_description\">\n\t\t\t\t<input className=\"project_description\"\n\t\t\t\t\tdata-testid=\"new_proj_desc\"\n\t\t\t\t\tid=\"new_project_users\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Authorized Users (Separated by a comma)\" />\n\t\t\t</div>\n\t\t\t{/* Description */}\n\t\t\t<div className=\"new_project_description\">\n\t\t\t\t<input className=\"project_description\"\n\t\t\t\t\tid=\"new_project_description\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter Project Description\" />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction ProjectJoiner(props) {\n\treturn (\n\t\t<div className=\"project\">\n\t\t\t{/* Title */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<p className=\"add_project_title\"\n\t\t\t\t\tdata-testid=\"join_project_test\">\n\t\t\t\t\tJoin Existing Project:\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{/* Users with Access */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<input className=\"new_project_input\"\n\t\t\t\t\tid=\"existing_project_id\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Project ID\" />\n\t\t\t</div>\n\t\t\t{/* Join or Leave */}\n\t\t\t<div className=\"join_project_column\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"join_project_btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={props.onProjectJoinClick} >\n\t\t\t\t\tJoin\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport {Projects};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}